<?xml version="1.0"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

  
  <!-- Thank god for internet, otherwise it would have taken me several days to figure out IPv6 -->
  <!-- Also consider adding an option to use compressed ipv6 for easier usage:-->
  <!-- <xs:pattern value="(([0-9A-Fa-f]{1,4}(:[0-9A-Fa-f]{1,4})*)?)::(([0-9A-Fa-f]{1,4}(:[0-9A-Fa-f]{1,4})*)?)(%[^%\s]+)?"/> -->
  <xs:simpleType name="IPv4Address">
    <xs:annotation>
      <xs:documentation>IPv4 address in dot-decimal notation. Equivalent to [0-255].[0-255].[0-255].[0-255]</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="IPv6Address">
    <xs:annotation>
      <xs:documentation>IPv6 address in full hex notation. I'm not going to write the equivilent ranges because this is still dark magic to me.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}(%[^%\s]+)?"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="port">
    <xs:annotation>
      <xs:documentation></xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:int">
      <xs:minInclusive value="1"/>
      <xs:maxInclusive value="65535"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="blake2b">
    <xs:union>
      <xs:simpleType>
        <xs:annotation>
          <xs:documentation>blake2b hash represented in Base64 format. 88 character length with == padding included.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:pattern value="((([A-Za-z0-9+/] ?){4})*(([A-Za-z0-9+/] ?){3}[A-Za-z0-9+/]|([A-Za-z0-9+/] ?){2}[AEIMQUYcgkosw048] ?=|[A-Za-z0-9+/] ?[AQgw] ?= ?=))?"/>
          <xs:length value="44" fixed="true"/>
          <!-- For some reason the built in xs:base64Binary did not like to validate the xs:length restriction properly. The pattern above was taken directly from the documentation for xs:base64Binary.-->
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:annotation>
          <xs:documentation>Empty hash restriction for variable files and folders</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
          <xs:length value="0"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>

  <xs:simpleType name="name">
    <xs:annotation>
      <xs:documentation>Restricts the size of any name fields to 40 characters</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="40"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="description">
    <xs:annotation>
      <xs:documentation>Restrcists the size of any description fields to 500 characters</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:maxLength value="500"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="salt">
    <xs:annotation>
      <xs:documentation>Creates a format for required salt data to be used in calculating verification (sign) data. Prevents whitespace and requires 8 characters</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:whiteSpace value="replace"/>
      <xs:length value="16"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="keyAddress">
    <xs:annotation>
      <xs:documentation>public/verify key in Base64 format</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((([A-Za-z0-9+/] ?){4})*(([A-Za-z0-9+/] ?){3}[A-Za-z0-9+/]|([A-Za-z0-9+/] ?){2}[AEIMQUYcgkosw048] ?=|[A-Za-z0-9+/] ?[AQgw] ?= ?=))?"/>
      <xs:length value="44" fixed="true"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="signature">
    <xs:annotation>
      <xs:documentation>signed data in Bas64 format</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((([A-Za-z0-9+/] ?){4})*(([A-Za-z0-9+/] ?){3}[A-Za-z0-9+/]|([A-Za-z0-9+/] ?){2}[AEIMQUYcgkosw048] ?=|[A-Za-z0-9+/] ?[AQgw] ?= ?=))?"/>
      <xs:length value="88" fixed="true"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="fileType">
    <xs:annotation>
      <xs:documentation>Restricts file type attribute to static or variable</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="static"/>
      <xs:enumeration value="variable"/>
    </xs:restriction>
  </xs:simpleType>
  
<!-- Create a limiter for file directory attribute -->
  
  
	<xs:element name="root">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
        
				<xs:element name="master">
					<xs:complexType>
						<xs:sequence>
              
							<xs:element name="address" type="keyAddress"/>
              
							<xs:element name="sign">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="signature">
                      <xs:attribute name ="salt" type ="salt" use="required"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
							</xs:element>

              <xs:element name="desc">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="description">
                      <xs:attribute name="name" type="name" use="required"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>

              <xs:element name="services">
                <xs:complexType>
                  <xs:choice maxOccurs="unbounded" minOccurs="0">
                    
                    <xs:element name="service">
                      <xs:complexType>
                        <xs:sequence>
                          
                          <xs:element name="desc">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="description">
                                  <xs:attribute name="name" type="name" use="required"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                            
                          </xs:element>

                          <xs:element name="data">
                            <xs:complexType>
                              <xs:sequence>
                                
                                <xs:element name="files">
                                  <xs:complexType>
                                    <xs:choice maxOccurs="unbounded">
                                      <xs:element name="file">

                                        <xs:complexType>
                                          <xs:simpleContent>
                                            <xs:extension base="blake2b">
                                              <xs:attribute name="rdir" type="xs:string" use="required"/>
                                              <xs:attribute name="type" type="fileType" use="required"/>
                                            </xs:extension>
                                          </xs:simpleContent>
                                        </xs:complexType>
                                        
                                      </xs:element>
                                    </xs:choice>
                                  </xs:complexType>
                                </xs:element>
                                
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          
                        </xs:sequence>
                        <xs:attribute name="version" type="blake2b" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    
                  </xs:choice>
                </xs:complexType>

                <xs:unique name="UniqueDescName">
                  <xs:selector xpath="service/desc"/>
                  <xs:field xpath="@name"/>
                </xs:unique>

              </xs:element>
              
						</xs:sequence>
					</xs:complexType>
				</xs:element>

        <xs:element name="peer">
          <xs:complexType>

            <xs:sequence>
              <xs:element name="address" type="keyAddress"/>

              <xs:element name="sign">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="signature">
                      <xs:attribute name ="salt" type ="salt" use="required"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>

              <xs:element name="desc">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="description">
                      <xs:attribute name="name" type="name" use="required"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>

              <xs:choice>
                <xs:element name="ipv4" maxOccurs="1">
                  <xs:complexType>
                    <xs:simpleContent>
                      <xs:extension base="IPv4Address">
                        <xs:attribute name="port" type="port"/>
                      </xs:extension>
                    </xs:simpleContent>
                  </xs:complexType>
                </xs:element>

                <xs:element name="ipv6" maxOccurs="1">
                  <xs:complexType>
                    <xs:simpleContent>
                      <xs:extension base="IPv6Address">
                        <xs:attribute name="port" type="port" use="required"/>
                      </xs:extension>
                    </xs:simpleContent>
                  </xs:complexType>
                </xs:element>
              </xs:choice>

              <xs:element name="services">
                <xs:complexType>
                  <xs:choice maxOccurs="unbounded">

                    <xs:element name="service">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="uaddress">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="keyAddress">
                                  <xs:attribute name="name" type="name" use="required"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="version" type="blake2b" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    
                  </xs:choice>
                </xs:complexType>
              </xs:element>
              
              
            </xs:sequence>
            
          </xs:complexType>
        </xs:element>
        
			</xs:choice>
		</xs:complexType>
	</xs:element>
</xs:schema>